{"version":3,"sources":["components/Map.js","App.js","index.js"],"names":["WrappedMap","withScriptjs","withGoogleMap","useState","selectedProperty","setSelectedProperty","defaultZoom","defaultCenter","lat","lng","properties","map","property","position","icon","url","scaledSize","window","google","maps","Size","onClick","id","onCloseClick","name","Map","googleMapURL","loadingElement","style","height","containerElement","mapElement","App","ReactDOM","render","document","getElementById"],"mappings":"2mBAuDA,IAAMA,EAAaC,uBAAaC,yBA5ChC,WAAyB,IAAD,EAC4BC,mBAAS,MADrC,mBACbC,EADa,KACKC,EADL,KAGpB,OACI,eAAC,YAAD,CACIC,YAAa,GACbC,cAAe,CAAEC,IAAK,kBAAmBC,KAAM,mBAFnD,UAIKC,EAAWC,KAAI,SAAAC,GAAQ,OACpB,cAAC,SAAD,CAEIC,SAAU,CACNL,IAAKI,EAASJ,IACdC,IAAKG,EAASH,KAElBK,KAAM,CACFC,IAAK,kCACLC,WAAY,IAAIC,OAAOC,OAAOC,KAAKC,KAAK,GAAI,KAEhDC,QAAU,WACNhB,EAAoBO,KAVnBA,EAASU,OAerBlB,GACG,cAAC,aAAD,CACIS,SAAU,CACNL,IAAKJ,EAAiBI,IACtBC,IAAKL,EAAiBK,KAE1Bc,aAAc,WACVlB,EAAoB,OAN5B,SASI,8BACI,6BAAKD,EAAiBoB,kBAqB/BC,MAXf,WACI,OACI,cAACzB,EAAD,CACI0B,aAAY,gIACZC,eAAgB,qBAAKC,MAAO,CAAEC,OAAO,UACrCC,iBAAkB,qBAAKF,MAAO,CAAEC,OAAO,UACvCE,WAAY,qBAAKH,MAAO,CAAEC,OAAO,aCjD9BG,MAVf,WACI,OACI,qBAAKV,GAAG,eAAR,SACI,qBAAKA,GAAG,cAAR,SACI,cAAC,EAAD,SCJhBW,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.f3c82773.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { \r\n    GoogleMap, \r\n    withScriptjs, \r\n    withGoogleMap, \r\n    Marker,\r\n    InfoWindow \r\n} from \"react-google-maps\";\r\nimport properties from \"../properties.json\";\r\n\r\n\r\nfunction MapComponent() {\r\n    const [selectedProperty, setSelectedProperty] = useState(null);\r\n\r\n    return (\r\n        <GoogleMap \r\n            defaultZoom={12}\r\n            defaultCenter={{ lat: 51.23651480350905, lng: -0.5703780104611352 }}\r\n        >\r\n            {properties.map(property => (\r\n                <Marker \r\n                    key={property.id} \r\n                    position={{\r\n                        lat: property.lat, \r\n                        lng: property.lng\r\n                    }}\r\n                    icon={{\r\n                        url: \"https://i.imgur.com/FpHIBa7.png\",\r\n                        scaledSize: new window.google.maps.Size(25, 25)\r\n                    }}\r\n                    onClick ={() => {\r\n                        setSelectedProperty(property);\r\n                    }}\r\n                />\r\n            ))}\r\n\r\n            {selectedProperty && (\r\n                <InfoWindow\r\n                    position={{\r\n                        lat: selectedProperty.lat, \r\n                        lng: selectedProperty.lng\r\n                    }}\r\n                    onCloseClick={() => {\r\n                        setSelectedProperty(null);\r\n                    }}\r\n                >\r\n                    <div>\r\n                        <h4>{selectedProperty.name}</h4>\r\n                    </div>\r\n                </InfoWindow>\r\n            )}\r\n        </GoogleMap>\r\n    )\r\n}\r\n\r\nconst WrappedMap = withScriptjs(withGoogleMap(MapComponent));\r\n\r\nfunction Map() {\r\n    return (\r\n        <WrappedMap \r\n            googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyCVc5BV5f51pj4r0K3RhGy4EDVGFKyGfqo`}\r\n            loadingElement={<div style={{ height:\"100%\"}} />}\r\n            containerElement={<div style={{ height:\"100%\"}} />}\r\n            mapElement={<div style={{ height:\"100%\"}} />}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Map;","import React from \"react\";\r\nimport \"./stylesheet.css\";\r\nimport Map from \"./components/Map\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div id=\"mapContainer\">\r\n            <div id=\"mapClipPath\">\r\n                <Map />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App/>, document.getElementById(\"root\"));"],"sourceRoot":""}